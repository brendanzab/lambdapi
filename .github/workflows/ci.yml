name: ci

on:
  push:
    branches:
      - master
      - next

  pull_request:
    branches:
      - master
      - next

jobs:
  check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: ["1.43.0", "stable", "beta", "nightly"]
    name: Check (${{ matrix.rust }})
    steps:
      - uses: actions/checkout@v2
      - name: Install minimal ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: ["1.43.0", "stable", "beta", "nightly"]
    name: Test Suite (${{ matrix.rust }})
    steps:
      - uses: actions/checkout@v2
      - name: Install minimal ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

  fmt:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: ["1.43.0", "stable", "beta", "nightly"]
    name: Rustfmt (${{ matrix.rust }})
    steps:
      - uses: actions/checkout@v2
      - name: Install minimal ${{ matrix.rust }} with rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt
      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: ["stable"]
        # rust: ["1.43.0", "stable", "beta", "nightly"]
    name: Clippy (${{ matrix.rust }})
    steps:
      - uses: actions/checkout@v2
      - name: Install minimal ${{ matrix.rust }} with clippy
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: clippy
      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  book:
    runs-on: ubuntu-latest
    name: Build and Test Book
    env:
      MDBOOK_VERSION: '0.4.2'
      MDBOOK_LINKCHECK_VERSION: '0.7.0'
    steps:
      - uses: actions/checkout@v2
      - name: Install mdBook
        # Install prebuilt binaries where possible to improve CI performance
        run: |
          mkdir -p $HOME/mdbook
          curl -L https://github.com/rust-lang/mdBook/releases/download/v$MDBOOK_VERSION/mdbook-v$MDBOOK_VERSION-x86_64-unknown-linux-gnu.tar.gz | tar xz -C $HOME/mdbook
          echo "::add-path::${HOME}/mdbook/"
          mkdir -p $HOME/mdbook-linkcheck
          curl -L https://github.com/Michael-F-Bryan/mdbook-linkcheck/releases/download/v$MDBOOK_LINKCHECK_VERSION/mdbook-linkcheck-v$MDBOOK_LINKCHECK_VERSION-x86_64-unknown-linux-gnu.tar.gz | tar xz -C $HOME/mdbook-linkcheck
          echo "::add-path::${HOME}/mdbook-linkcheck/"
      - name: Install Javascript dependencies
        run: yarn install
        working-directory: book
      - name: Build additional Javascript
        run: yarn build
        working-directory: book
      - name: Build book
        run: mdbook build
        working-directory: book
      - name: Test book
        run: mdbook test
        working-directory: book
      # TODO: Deploy to Github Pages on crate release
